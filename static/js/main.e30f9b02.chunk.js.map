{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","error","setError","newAccount","setNewAccount","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","src","width","height","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","newArray","docs","map","document","data","key","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e30f9b02.chunk.js","sourcesContent":["import * as firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import React from 'react';\r\nimport { authService } from 'fbase';\r\nimport { useState } from 'react';\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === 'email') {\r\n      setEmail(value);\r\n    } else if (name === 'password') {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        data = await authService.createUserWithEmailAndPassword(email, password);\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n        />\r\n        <input type=\"submit\" value={newAccount ? 'Create Account' : 'Log In'} />\r\n        {error}\r\n      </form>\r\n      <span onClick={toggleAccount}>{newAccount ? 'Sign In' : 'Create Account'}</span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import React from 'react';\r\nimport { authService, firebaseInstance } from 'fbase';\r\nimport AuthForm from 'components/AuthForm';\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === 'google') {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === 'github') {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n  return (\r\n    <div>\r\n      <AuthForm />\r\n      <div>\r\n        <button onClick={onSocialClick} name=\"google\">\r\n          Continue with Google\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\">\r\n          Continue with Github\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import { dbService, storageService } from 'fbase';\r\nimport React, { useState } from 'react';\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm('Are you sure you want to delete this nweet?');\r\n    if (ok) {\r\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n      if (nweetObj.attachmentUrl !== '')\r\n        await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet });\r\n    setEditing(false);\r\n  };\r\n  return (\r\n    <div>\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit}>\r\n            <input onChange={onChange} value={newNweet} required />\r\n            <input type=\"submit\" value=\"Update Nweet\" />\r\n          </form>\r\n          <button onClick={toggleEditing}>Cancel</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && (\r\n            <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\r\n          )}\r\n          {isOwner && (\r\n            <>\r\n              <button onClick={onDeleteClick}>Delete Nweet</button>\r\n              <button onClick={toggleEditing}>Edit Nweet</button>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { dbService, storageService } from 'fbase';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState('');\r\n  const [attachment, setAttachment] = useState('');\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let attachmentUrl = '';\r\n    if (attachment !== '') {\r\n      const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, 'data_url');\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const nweetObj = {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await dbService.collection('nweets').add(nweetObj);\r\n    setNweet('');\r\n    setAttachment('');\r\n  };\r\n  const onChange = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const onClearAttachment = () => setAttachment('');\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <input\r\n        value={nweet}\r\n        onChange={onChange}\r\n        type=\"text\"\r\n        placeholder=\"What's on your mind?\"\r\n        maxLength={120}\r\n      />\r\n      <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\r\n      <input type=\"submit\" value=\"Nweet\" />\r\n      {attachment && (\r\n        <div>\r\n          <img src={attachment} width=\"50px\" height=\"50px\" />\r\n          <button onClick={onClearAttachment}>Clear</button>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NweetFactory;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Nweet from 'components/Nweet';\r\nimport { dbService } from 'fbase';\r\nimport NweetFactory from 'components/NweetFactory';\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n  useEffect(() => {\r\n    dbService.collection('nweets').onSnapshot((snapshot) => {\r\n      const newArray = snapshot.docs.map((document) => ({\r\n        id: document.id,\r\n        ...document.data(),\r\n      }));\r\n      setNweets(newArray);\r\n    });\r\n  }, []);\r\n  return (\r\n    <>\r\n      <NweetFactory userObj={userObj} />\r\n      <div>\r\n        {nweets.map((nweet) => (\r\n          <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { authService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push('/');\r\n    refreshUser();\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({ displayName: newDisplayName });\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <input onChange={onChange} type=\"text\" placeholder=\"Display name\" value={newDisplayName} />\r\n        <input type=\"submit\" value=\"Update Profile\" />\r\n      </form>\r\n      <button onClick={onLogOutClick}>Log Out</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navigation = ({ userObj }) => {\r\n  return (\r\n    <nav>\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/\">Home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/profile\">{userObj.displayName}의 Profile</Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport { HashRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\r\nimport Auth from 'routes/Auth';\r\nimport Home from 'routes/Home';\r\nimport Profile from 'routes/Profile';\r\nimport Navigation from './Navigation';\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile refreshUser={refreshUser} userObj={userObj} />\r\n            </Route>\r\n          </>\r\n        ) : (\r\n          <Route exact path=\"/\">\r\n            <Auth />\r\n          </Route>\r\n        )}\r\n        <Redirect from=\"*\" to=\"/\" />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from 'react';\r\nimport AppRouter from 'components/Router';\r\nimport { authService } from 'fbase';\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  const [userObj, setUserObj] = useState(null);\r\n  useEffect(() => {\r\n    authService.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        setUserObj({\r\n          uid: user.uid,\r\n          displayName: user.displayName,\r\n          updateProfile: (args) => user.updateProfile(args),\r\n        });\r\n      } else {\r\n        setUserObj(null);\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, []);\r\n  const refreshUser = () => {\r\n    const user = authService.currentUser;\r\n    setUserObj({\r\n      uid: user.uid,\r\n      displayName: user.displayName,\r\n      updateProfile: (args) => user.updateProfile(args),\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      {init ? (\r\n        <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj} />\r\n      ) : (\r\n        'initializing...'\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from 'components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}